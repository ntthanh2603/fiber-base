version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fiber-base-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fiber-base
      POSTGRES_USER: fiber-base
      POSTGRES_PASSWORD: 123456
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - fiber-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fiber-base -d fiber-base"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: fiber-base-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fiber-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Fiber Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fiber-base-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - APP_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=fiber-base
      - DB_PASSWORD=123456
      - DB_NAME=fiber-base
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./config:/root/config:ro
      - ./storage/logs:/root/storage/logs
    networks:
      - fiber-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/v1/users",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: fiber-base-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./web/static:/var/www/static:ro
      - nginx_logs:/var/log/nginx
    networks:
      - fiber-network
    depends_on:
      - app

  # PostgreSQL Admin (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fiber-base-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fiber-base.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - fiber-network
    depends_on:
      - postgres

networks:
  fiber-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  nginx_logs:
    driver: local
